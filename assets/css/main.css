/*! sanitize.css v5.0.0 | CC0 License | github.com/jonathantneal/sanitize.css */
/* Document (https://html.spec.whatwg.org/multipage/semantics.html#semantics)
   ========================================================================== */
/**
 * 1. Remove repeating backgrounds in all browsers (opinionated).
 * 2. Add box sizing inheritance in all browsers (opinionated).
 */
*,
::before,
::after {
  background-repeat: no-repeat;
  /* 1 */
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  /* 2 */ }

/**
	* 1. Add text decoration inheritance in all browsers (opinionated).
	* 2. Add vertical alignment inheritance in all browsers (opinionated).
	*/
::before,
::after {
  text-decoration: inherit;
  /* 1 */
  vertical-align: inherit;
  /* 2 */ }

/**
	* 1. Add border box sizing in all browsers (opinionated).
	* 2. Add the default cursor in all browsers (opinionated).
	* 3. Prevent font size adjustments after orientation changes in IE and iOS.
	*/
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  cursor: default;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections (https://html.spec.whatwg.org/multipage/semantics.html#sections)
		========================================================================== */
/**
	* Add the correct display in IE 9-.
	*/
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
	* Remove the margin in all browsers (opinionated).
	*/
body {
  margin: 0; }

/**
	* Correct the font size and margin on `h1` elements within `section` and
	* `article` contexts in Chrome, Firefox, and Safari.
	*/
h1 {
  font-size: 2em;
  margin: .67em 0; }

/* Grouping content (https://html.spec.whatwg.org/multipage/semantics.html#grouping-content)
		========================================================================== */
/**
	* Add the correct display in IE 9-.
	* 1. Add the correct display in IE.
	*/
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
	* Add the correct margin in IE 8.
	*/
figure {
  margin: 1em 40px; }

/**
	* 1. Add the correct box sizing in Firefox.
	* 2. Show the overflow in Edge and IE.
	*/
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
	* Remove the list style on navigation lists in all browsers (opinionated).
	*/
nav ol,
nav ul {
  list-style: none; }

/**
	* 1. Correct the inheritance and scaling of font size in all browsers.
	* 2. Correct the odd `em` font sizing in all browsers.
	*/
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics (https://html.spec.whatwg.org/multipage/semantics.html#text-level-semantics)
		========================================================================== */
/**
	* 1. Remove the gray background on active links in IE 10.
	* 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
	*/
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
	* 1. Remove the bottom border in Firefox 39-.
	* 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
	*/
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
	* Prevent the duplicate application of `bolder` by the next rule in Safari 6.
	*/
b,
strong {
  font-weight: inherit; }

/**
	* Add the correct font weight in Chrome, Edge, and Safari.
	*/
b,
strong {
  font-weight: bolder; }

/**
	* 1. Correct the inheritance and scaling of font size in all browsers.
	* 2. Correct the odd `em` font sizing in all browsers.
	*/
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
	* Add the correct font style in Android 4.3-.
	*/
dfn {
  font-style: italic; }

/**
	* Add the correct background and color in IE 9-.
	*/
mark {
  background-color: #ffff00;
  color: #000000; }

/**
	* Add the correct font size in all browsers.
	*/
small {
  font-size: 80%; }

/**
	* Prevent `sub` and `sup` elements from affecting the line height in
	* all browsers.
	*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

/*
	* Remove the text shadow on text selections (opinionated).
	* 1. Restore the coloring undone by defining the text shadow (opinionated).
	*/
::-moz-selection {
  background-color: #b3d4fc;
  /* 1 */
  color: #000000;
  /* 1 */
  text-shadow: none; }

::selection {
  background-color: #b3d4fc;
  /* 1 */
  color: #000000;
  /* 1 */
  text-shadow: none; }

/* Embedded content (https://html.spec.whatwg.org/multipage/embedded-content.html#embedded-content)
		========================================================================== */
/*
	* Change the alignment on media elements in all browers (opinionated).
	*/
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/**
	* Add the correct display in IE 9-.
	*/
audio,
video {
  display: inline-block; }

/**
	* Add the correct display in iOS 4-7.
	*/
audio:not([controls]) {
  display: none;
  height: 0; }

/**
	* Remove the border on images inside links in IE 10-.
	*/
img {
  border-style: none; }

/**
	* Change the fill color to match the text color in all browsers (opinionated).
	*/
svg {
  fill: currentColor; }

/**
	* Hide the overflow in IE.
	*/
svg:not(:root) {
  overflow: hidden; }

/* Tabular data (https://html.spec.whatwg.org/multipage/tables.html#tables)
		========================================================================== */
/**
	* Collapse border spacing
	*/
table {
  border-collapse: collapse; }

/* Forms (https://html.spec.whatwg.org/multipage/forms.html#forms)
		========================================================================== */
/**
	* Remove the margin in Firefox and Safari.
	*/
button,
input,
optgroup,
select,
textarea {
  margin: 0; }

/**
	* Inherit styling in all browsers (opinionated).
	*/
button,
input,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

/**
	* Show the overflow in IE.
	* 1. Show the overflow in Edge.
	*/
button,
input {
  /* 1 */
  overflow: visible; }

/**
	* Remove the inheritance of text transform in Edge, Firefox, and IE.
	* 1. Remove the inheritance of text transform in Firefox.
	*/
button,
select {
  /* 1 */
  text-transform: none; }

/**
	* 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
	*    controls in Android 4.
	* 2. Correct the inability to style clickable types in iOS and Safari.
	*/
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
	* Remove the inner border and padding in Firefox.
	*/
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
	* Restore the focus styles unset by the previous rule.
	*/
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
	* 1. Correct the text wrapping in Edge and IE.
	* 2. Correct the color inheritance from `fieldset` elements in IE.
	* 3. Remove the padding so developers are not caught out when they zero out
	*    `fieldset` elements in all browsers.
	*/
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
	* 1. Add the correct display in IE 9-.
	* 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
	*/
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
	* 1. Remove the default vertical scrollbar in IE.
	* 2. Change the resize direction on textareas in all browsers (opinionated).
	*/
textarea {
  overflow: auto;
  /* 1 */
  resize: vertical;
  /* 2 */ }

/**
	* 1. Add the correct box sizing in IE 10-.
	* 2. Remove the padding in IE 10-.
	*/
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
	* Correct the cursor style of increment and decrement buttons in Chrome.
	*/
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
	* 1. Correct the odd appearance in Chrome and Safari.
	* 2. Correct the outline style in Safari.
	*/
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
	* Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
	*/
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
	* 1. Correct the inability to style clickable types in iOS and Safari.
	* 2. Change font properties to `inherit` in Safari.
	*/
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive elements (https://html.spec.whatwg.org/multipage/forms.html#interactive-elements)
		========================================================================== */
/*
	* Add the correct display in IE 9-.
	* 1. Add the correct display in Edge, IE, and Firefox.
	*/
details,
menu {
  display: block; }

/*
	* Add the correct display in all browsers.
	*/
summary {
  display: list-item; }

/* Scripting (https://html.spec.whatwg.org/multipage/scripting.html#scripting-3)
		========================================================================== */
/**
	* Add the correct display in IE 9-.
	*/
canvas {
  display: inline-block; }

/**
	* Add the correct display in IE.
	*/
template {
  display: none; }

/* User interaction (https://html.spec.whatwg.org/multipage/interaction.html#editing)
		========================================================================== */
/*
	* Remove the tapping delay on clickable elements (opinionated).
	* 1. Remove the tapping delay in IE 10.
	*/
a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
  /* 1 */
  touch-action: manipulation; }

/**
	* Add the correct display in IE 10-.
	*/
[hidden] {
  display: none; }

/* ARIA (https://w3c.github.io/html-aria/)
		========================================================================== */
/**
	* Change the cursor on busy elements (opinionated).
	*/
[aria-busy="true"] {
  cursor: progress; }

/*
	* Change the cursor on control elements (opinionated).
	*/
[aria-controls] {
  cursor: pointer; }

/*
	* Change the display on visually hidden accessible elements (opinionated).
	*/
[aria-hidden="false"][hidden]:not(:focus) {
  clip: rect(0, 0, 0, 0);
  display: inherit;
  position: absolute; }

/*
	* Change the cursor on disabled, not-editable, or otherwise
	* inoperable elements (opinionated).
	*/
[aria-disabled] {
  cursor: default; }

body {
  font-family: "Ubuntu", sans-serif;
  font-weight: 400;
  line-height: 1.5;
  font-size: 1.6rem;
  color: #fff !important; }

.text-center {
  text-align: center; }

.mb-big {
  margin-bottom: 6rem; }

.mb-small {
  margin-bottom: 1.5rem; }

body {
  padding: 0;
  background-color: #101015; }

a {
  color: inherit;
  text-decoration: none; }

html {
  font-size: 62.5%; }

img {
  max-width: 100%;
  height: auto; }

ul,
li {
  list-style: none;
  padding: 0;
  margin: 0; }

.container {
  width: 1200px;
  margin: 0 auto;
  padding-left: 1rem;
  padding-right: 1rem; }
  .container::after {
    content: '';
    clear: both;
    display: table; }
  @media (max-width: 1200px) {
    .container {
      width: 900px; } }
  @media (max-width: 900px) {
    .container {
      width: 768px; } }
  @media (max-width: 768px) {
    .container {
      width: 100%;
      padding: 0; } }

.pagination {
  text-align: center;
  background-color: #fff;
  display: inline-block;
  border-radius: 5px;
  overflow: hidden; }
  .pagination__control--active {
    background-color: #FFD300 !important;
    color: #333 !important; }
  .pagination__control--done {
    background-color: #9292a2; }
  .pagination a,
  .pagination span {
    padding: 1rem 1.5rem;
    margin-left: -2px;
    margin-right: -2px;
    background-color: #fff;
    display: inline-block;
    color: #9292a2; }
  .pagination a:hover {
    background-color: #f1f1f1; }

.tag {
  color: #FFD300;
  background: #333;
  padding: 1rem 3rem;
  font-weight: 700;
  z-index: 2;
  border-radius: 15px; }
  .tag a {
    text-decoration: none; }

.container-card {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-top: 25vh;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  @media only screen and (max-width: 768px) {
    .container-card {
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center; } }

.card {
  background: #fff;
  height: 24rem;
  color: #333;
  border-radius: 4px;
  margin-bottom: 2rem;
  overflow: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%; }
  .card a {
    text-decoration: none;
    text-transform: uppercase;
    color: #333;
    -webkit-transition: color 300ms ease-in-out;
    transition: color 300ms ease-in-out; }
    .card a:hover {
      color: #1985A1;
      -webkit-transition: color 300ms ease-in-out;
      transition: color 300ms ease-in-out; }
  .card__picture {
    overflow: hidden;
    height: inherit;
    -ms-flex-preferred-size: 30%;
        flex-basis: 30%;
    position: relative; }
    .card__picture a {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0; }
    .card__picture--img {
      width: 100%;
      height: 100%;
      -o-object-fit: cover;
         object-fit: cover;
      -webkit-transition: -webkit-transform 500ms ease;
      transition: -webkit-transform 500ms ease;
      transition: transform 500ms ease;
      transition: transform 500ms ease, -webkit-transform 500ms ease;
      cursor: pointer; }
      .card__picture--img:hover {
        -webkit-transform: scale(1.05);
                transform: scale(1.05);
        -webkit-transition: -webkit-transform 500ms ease;
        transition: -webkit-transform 500ms ease;
        transition: transform 500ms ease;
        transition: transform 500ms ease, -webkit-transform 500ms ease; }
    @media only screen and (max-width: 768px) {
      .card__picture {
        -ms-flex-preferred-size: 50%;
            flex-basis: 50%; } }
  .card__content {
    padding: 1.5rem;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -ms-flex-preferred-size: 70%;
        flex-basis: 70%; }
    .card__content .data {
      font-size: 1.2rem;
      color: #9292a2; }
    @media only screen and (max-width: 768px) {
      .card__content {
        -ms-flex-preferred-size: 50%;
            flex-basis: 50%; } }
  .card__author {
    margin-right: 2rem; }
  .card__footer {
    border-top: 1px solid #e4e7ed;
    text-transform: uppercase;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    margin-top: auto; }
    .card__footer span {
      position: relative; }
    .card__footer .fa-tags {
      color: #9292a2;
      margin-right: .5rem; }
  @media only screen and (max-width: 768px) {
    .card {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
      height: 42rem;
      -ms-flex-preferred-size: 85%;
          flex-basis: 85%;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center; } }

.topbar {
  height: 40px;
  background-color: #101015; }
  .topbar__social {
    margin: .7rem 0;
    float: right; }
    .topbar__social a {
      text-decoration: none; }
      .topbar__social a:not(:last-child) {
        margin-right: 1rem; }
      .topbar__social a:hover {
        color: #FFD300; }

.menu-toggle {
  background: #2b1e2e;
  cursor: pointer;
  width: 40px;
  height: 40px;
  display: none;
  background: #ccc;
  border-radius: 50%;
  padding: 0 .3rem;
  position: absolute;
  right: 20px;
  top: 60px;
  overflow: hidden;
  z-index: 999; }
  .menu-toggle .hamburger {
    position: relative;
    display: block;
    width: 80%;
    height: 3px;
    top: 30%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    z-index: 10;
    color: #fff;
    background: #fff;
    -webkit-transition: all 500ms ease-in-out;
    transition: all 500ms ease-in-out; }
    .menu-toggle .hamburger::before, .menu-toggle .hamburger::after {
      content: '';
      position: absolute;
      color: #fff;
      background: #fff;
      height: 3px;
      width: 100%;
      border-radius: 15px;
      -webkit-transition: all 500ms ease-in-out;
      transition: all 500ms ease-in-out; }
    .menu-toggle .hamburger::before {
      -webkit-transform: translateY(8px);
              transform: translateY(8px); }
    .menu-toggle .hamburger::after {
      -webkit-transform: translateY(16px);
              transform: translateY(16px); }
  .menu-toggle.header-open .hamburger {
    left: 4px;
    top: 19px;
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg); }
    .menu-toggle.header-open .hamburger::before {
      opacity: 0; }
    .menu-toggle.header-open .hamburger::after {
      -webkit-transform: rotate(-90deg);
              transform: rotate(-90deg); }
  @media only screen and (max-width: 768px) {
    .menu-toggle {
      display: block; } }

.header {
  background-color: #333;
  text-transform: uppercase;
  font-weight: 700;
  -webkit-transition: -webkit-transform 500ms ease;
  transition: -webkit-transform 500ms ease;
  transition: transform 500ms ease;
  transition: transform 500ms ease, -webkit-transform 500ms ease; }
  .header__logo {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    margin-left: 2rem;
    -ms-flex-item-align: center;
        align-self: center;
    width: 32px; }
    .header__logo-valknut {
      fill: #FFD300;
      width: 100%; }
    @media only screen and (max-width: 768px) {
      .header__logo {
        display: none; } }
  .header__main-area {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    height: auto;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between; }
  .header__navbar-nav {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    margin: 0;
    padding: 0;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    height: 100%; }
    .header__navbar-nav-items {
      cursor: pointer;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      text-align: center;
      position: relative; }
      .header__navbar-nav-items a {
        text-decoration: none;
        color: #fff;
        -ms-flex-item-align: center;
            align-self: center;
        width: 100px;
        padding: 1rem 0; }
        @media screen and (min-width: 768px) {
          .header__navbar-nav-items a.active {
            border-top: solid 4px #E60000;
            background: #595959; } }
      @media screen and (min-width: 768px) {
        .header__navbar-nav-items:hover {
          -webkit-transition: background-color 500ms;
          transition: background-color 500ms;
          background: #595959; }
        .header__navbar-nav-items:hover::before {
          height: 4px; }
        .header__navbar-nav-items::before {
          -webkit-transition: height 200ms;
          transition: height 200ms;
          content: '';
          height: 0;
          position: absolute;
          background: #E60000;
          width: 100%; } }
  @media only screen and (max-width: 768px) {
    .header {
      -webkit-transform: translateY(-60%);
              transform: translateY(-60%);
      opacity: 0;
      visibility: hidden;
      position: absolute;
      left: 0;
      right: 0;
      bottom: 0;
      top: 0;
      z-index: 3; }
      .header [class^="header__"] {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
            -ms-flex-direction: column;
                flex-direction: column; }
      .header.is-open {
        -webkit-transform: translateY(0);
                transform: translateY(0);
        visibility: visible;
        opacity: 1;
        background: rgba(117, 117, 117, 0.8);
        height: 100vh; }
      .header__main-area {
        height: 50vh;
        -webkit-box-pack: center;
            -ms-flex-pack: center;
                justify-content: center; }
      .header__navbar-nav-items {
        margin: 0 auto;
        width: 50%;
        border-bottom: 1px solid #fff;
        margin-top: 2rem;
        border-radius: 5px; } }

.footer {
  margin-top: 40vh;
  background-image: -webkit-gradient(linear, left bottom, left top, color-stop(-120%, #434343), color-stop(40%, black));
  background-image: linear-gradient(to top, #434343 -120%, black 40%);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  width: 100%;
  white-space: nowrap; }
  .footer h4 {
    color: #FFBF00;
    font-size: 1.3em; }
  .footer a {
    text-decoration: none; }
  .footer > * {
    -ms-flex-preferred-size: 240px;
        flex-basis: 240px; }
    .footer > *:not(:first-child) {
      padding-left: 5rem;
      border-left: 1px solid rgba(146, 146, 162, 0.2); }
    .footer > * li {
      height: 36px;
      line-height: 28px; }
  @media only screen and (max-width: 768px) {
    .footer {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center;
      text-align: center; }
      .footer > * {
        width: 100%; }
        .footer > *:not(:first-child) {
          padding: 0 1rem; } }

.wrapper {
  margin-top: 10rem; }

.posts {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  min-width: 300px; }
  .posts__news:first-child {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
    -ms-flex-preferred-size: 100%;
        flex-basis: 100%;
    height: 500px; }
  .posts__news {
    background-position: center;
    background-size: cover;
    background-color: #1985A1;
    cursor: pointer;
    padding: 2rem;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: end;
        -ms-flex-align: end;
            align-items: flex-end;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    height: 300px;
    position: relative; }
    .posts__news::after {
      content: '';
      color: red;
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      background-image: -webkit-gradient(linear, left bottom, left top, from(#000), to(transparent));
      background-image: linear-gradient(to top, #000, transparent);
      opacity: .8;
      -webkit-transition: all 300ms ease-in;
      transition: all 300ms ease-in; }
    .posts__news:hover::after {
      opacity: 1; }
    .posts__news-details {
      z-index: 1;
      -webkit-transition: all 300ms ease-in;
      transition: all 300ms ease-in; }
      .posts__news-details .data {
        display: block;
        font-weight: 700;
        color: #FFD300; }
      .posts__news-details h1 {
        font-size: 2.8rem; }
      @media only screen and (max-width: 768px) {
        .posts__news-details h1 {
          font-size: 2rem; } }
    .posts__news .tag {
      position: absolute;
      top: 5px;
      left: 10px; }
  @media only screen and (max-width: 768px) {
    .posts {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column; } }

.post {
  word-break: break-word; }
  .post__banner {
    min-height: 45rem;
    position: relative;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
  .post__title {
    font-size: 5rem;
    text-transform: uppercase;
    text-shadow: 4px 2px 0 #1985a1; }
    @media only screen and (max-width: 768px) {
      .post__title {
        font-size: 2.4rem; } }
  .post__content {
    padding: 2rem 0;
    background-color: #fff;
    color: #101015; }
    .post__content h1,
    .post__content h2,
    .post__content p {
      letter-spacing: 0.5px;
      line-height: 2;
      max-width: 92rem;
      -webkit-text-size-adjust: 100%;
         -moz-text-size-adjust: 100%;
          -ms-text-size-adjust: 100%;
              text-size-adjust: 100%;
      padding-left: 2rem;
      margin: 0 auto 3rem; }
    .post__content h1,
    .post__content h2 {
      line-height: 3; }
    .post__content p {
      font-size: 1.8rem; }
      @media only screen and (max-width: 768px) {
        .post__content p {
          font-size: 1.6rem; } }
  .post__comments {
    max-width: 90rem;
    margin: 0 auto;
    margin-top: 20rem; }
  .post__share {
    padding: 6rem 0;
    width: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
